#!/usr/bin/env node
//tool to convert files is called flac2mp3, invoked via command line with various options

const fs = require('fs');
const process = require('process');
const childProcess = require('child_process');
const program = require('commander');
const filesToKeep = {
  wmv: true,
  m4a: true,
  aac: true,
  mp3: true,
  flac: true
};
const needToConvert = {
  flac: true,
  wmv: true
};
//will use childProcess to invoke flac2mp3
const converterLib = {
  processCLI(input){
    let output;
    program
      // .option('-d, --day', 'specify to run for files from the last day')
      .option('-w, --week', 'specify to run for files from the last week')
      .option('-m, --month', 'specify to run for files from the last month')
      .parse(input)
    output.month = program.month;
    output.week = program.week;
    // output.day = program.day;
    return output;
  },
  // will take output generated by processCLI as input
  findDateRange(today, { week, month }){
    let rangeMs = 86400000;
    if(week){
      rangeMs *= 7;
    } else if(month){
      rangeMs *= 30;
    }
    return today - rangeMs;
  },
  getCurrentDate(){
    const today = new Date();
    const todayMs = today.getTime();
    return todayMs;
    // output should be in acceptable date output to compare
  }.
  compareDates(dateRange, dateCheck){
    if(dateRange < dateCheck){
      return true;
    }
    return false;
    // output should be true, date is in range, or false, out of range
  },
  findFoldersInDateRange(directory, inputDate, dateRange){
    const outputArr = fs.readdirSync(directory);
    outputArr.forEach((folder) => {
      if(this.compareDates(dateRange, inputDate)){

      }
    })
  },
  matchFileType(acceptableInput, inputFile){

  }
  getFolderAge(folder){
    const { birthTimeMs } = fs.statSync(folder);
    return birthTimeMs;
    // output should be in acceptable date output to compare

  },
  moveFilesToOutput(){

  },

};

module.exports = converterLib
